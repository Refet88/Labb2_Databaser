// <auto-generated />
using System;
using Labb2_Databaser.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb2_Databaser.Migrations
{
    [DbContext(typeof(AdlibrisContext))]
    partial class AdlibrisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BöckerFörfattare", b =>
                {
                    b.Property<int>("FörfattareId")
                        .HasColumnType("int");

                    b.Property<string>("Isbn13")
                        .HasColumnType("char(13)");

                    b.HasKey("FörfattareId", "Isbn13");

                    b.HasIndex("Isbn13");

                    b.ToTable("BöckerFörfattare");
                });

            modelBuilder.Entity("Labb2_Databaser.Författare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Dödsdatum")
                        .HasColumnType("date");

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("Födelsedatum")
                        .HasColumnType("date");

                    b.Property<string>("Förnamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Författa__3214EC27ED9A1422");

                    b.ToTable("Författare", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Butiker", b =>
                {
                    b.Property<int>("ButikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButikId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Butiksnamn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostNummer")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("ButikId")
                        .HasName("PK__Butiker__B5D66BFA94885CF2");

                    b.ToTable("Butiker", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Böcker", b =>
                {
                    b.Property<string>("Isbn13")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN13")
                        .IsFixedLength();

                    b.Property<int?>("AntalSidor")
                        .HasColumnType("int")
                        .HasColumnName("Antal_sidor");

                    b.Property<int?>("FörlagId")
                        .HasColumnType("int")
                        .HasColumnName("FörlagID");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Språk")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("Utgivningsdatum")
                        .HasColumnType("date");

                    b.HasKey("Isbn13")
                        .HasName("PK__Böcker__3BF79E034CB8E506");

                    b.HasIndex("FörlagId");

                    b.ToTable("Böcker", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.FörfattareBöcker", b =>
                {
                    b.Property<int>("FörfattareId")
                        .HasColumnType("int")
                        .HasColumnName("FörfattareId");

                    b.Property<string>("Isbn")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .IsFixedLength();

                    b.HasKey("FörfattareId", "Isbn");

                    b.HasIndex("Isbn");

                    b.ToTable("FörfattareBöcker");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Förlag", b =>
                {
                    b.Property<int>("FörlagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FörlagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FörlagId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostNummer")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("TelefonNummer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Telefon_Nummer");

                    b.HasKey("FörlagId")
                        .HasName("PK__Förlag__DE6A852C9B0007C1");

                    b.ToTable("Förlag", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.FörsäljningPerKund", b =>
                {
                    b.Property<int?>("AntalOrdrar")
                        .HasColumnType("int");

                    b.Property<int>("KundId")
                        .HasColumnType("int")
                        .HasColumnName("KundID");

                    b.Property<string>("KundNamn")
                        .IsRequired()
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)");

                    b.Property<decimal?>("TotalFörsäljning")
                        .HasColumnType("decimal(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("FörsäljningPerKund", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Kunder", b =>
                {
                    b.Property<int>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KundID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Förnamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostNummer")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("TelefonNummer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Telefon_Nummer");

                    b.HasKey("KundId")
                        .HasName("PK__Kunder__F2B5DEAC676B8B49");

                    b.ToTable("Kunder", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.LagerSaldo", b =>
                {
                    b.Property<int>("ButikId")
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    b.Property<string>("Isbn")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN")
                        .IsFixedLength();

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.HasKey("ButikId", "Isbn")
                        .HasName("PK__LagerSal__1191B894FD876E18");

                    b.HasIndex("Isbn");

                    b.ToTable("LagerSaldo", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.OrderDetaljer", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("Isbn")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("char(13)")
                        .HasColumnName("ISBN")
                        .IsFixedLength();

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderId", "Isbn")
                        .HasName("PK__OrderDet__67D788C1FDBA446D");

                    b.HasIndex("Isbn");

                    b.ToTable("OrderDetaljer", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Ordrar", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("KundId")
                        .HasColumnType("int")
                        .HasColumnName("KundID");

                    b.Property<DateOnly>("OrderDatum")
                        .HasColumnType("date");

                    b.HasKey("OrderId")
                        .HasName("PK__Ordrar__C3905BAFF02E51B6");

                    b.HasIndex("KundId");

                    b.ToTable("Ordrar", (string)null);
                });

            modelBuilder.Entity("Labb2_Databaser.Model.TitlarPerFörfattare", b =>
                {
                    b.Property<decimal?>("Lagervärde")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasMaxLength(101)
                        .HasColumnType("nvarchar(101)");

                    b.Property<int?>("Titlar")
                        .HasColumnType("int");

                    b.Property<int?>("Ålder")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("TitlarPerFörfattare", (string)null);
                });

            modelBuilder.Entity("BöckerFörfattare", b =>
                {
                    b.HasOne("Labb2_Databaser.Författare", null)
                        .WithMany()
                        .HasForeignKey("FörfattareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb2_Databaser.Model.Böcker", null)
                        .WithMany()
                        .HasForeignKey("Isbn13")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Böcker", b =>
                {
                    b.HasOne("Labb2_Databaser.Model.Förlag", "Förlag")
                        .WithMany("Böcker")
                        .HasForeignKey("FörlagId")
                        .HasConstraintName("FK__Böcker__FörlagID__4AB81AF0");

                    b.Navigation("Förlag");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.FörfattareBöcker", b =>
                {
                    b.HasOne("Labb2_Databaser.Författare", "Författare")
                        .WithMany("FörfattareBöcker")
                        .HasForeignKey("FörfattareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb2_Databaser.Model.Böcker", "Bok")
                        .WithMany("FörfattareBöcker")
                        .HasForeignKey("Isbn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bok");

                    b.Navigation("Författare");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.LagerSaldo", b =>
                {
                    b.HasOne("Labb2_Databaser.Model.Butiker", "Butik")
                        .WithMany("LagerSaldo")
                        .HasForeignKey("ButikId")
                        .IsRequired()
                        .HasConstraintName("FK__LagerSald__Butik__3E52440B");

                    b.HasOne("Labb2_Databaser.Model.Böcker", "IsbnNavigation")
                        .WithMany("LagerSaldo")
                        .HasForeignKey("Isbn")
                        .IsRequired()
                        .HasConstraintName("FK__LagerSaldo__ISBN__3F466844");

                    b.Navigation("Butik");

                    b.Navigation("IsbnNavigation");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.OrderDetaljer", b =>
                {
                    b.HasOne("Labb2_Databaser.Model.Böcker", "IsbnNavigation")
                        .WithMany("OrderDetaljer")
                        .HasForeignKey("Isbn")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDetal__ISBN__47DBAE45");

                    b.HasOne("Labb2_Databaser.Model.Ordrar", "Order")
                        .WithMany("OrderDetaljer")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__46E78A0C");

                    b.Navigation("IsbnNavigation");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Ordrar", b =>
                {
                    b.HasOne("Labb2_Databaser.Model.Kunder", "Kund")
                        .WithMany("Ordrar")
                        .HasForeignKey("KundId")
                        .HasConstraintName("FK__Ordrar__KundID__440B1D61");

                    b.Navigation("Kund");
                });

            modelBuilder.Entity("Labb2_Databaser.Författare", b =>
                {
                    b.Navigation("FörfattareBöcker");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Butiker", b =>
                {
                    b.Navigation("LagerSaldo");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Böcker", b =>
                {
                    b.Navigation("FörfattareBöcker");

                    b.Navigation("LagerSaldo");

                    b.Navigation("OrderDetaljer");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Förlag", b =>
                {
                    b.Navigation("Böcker");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Kunder", b =>
                {
                    b.Navigation("Ordrar");
                });

            modelBuilder.Entity("Labb2_Databaser.Model.Ordrar", b =>
                {
                    b.Navigation("OrderDetaljer");
                });
#pragma warning restore 612, 618
        }
    }
}
